rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && request.auth.token.email == "geoffabrown@gmail.com";
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for user documents
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      // Rules for user habits subcollection
      match /habits/{habitId} {
        allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
    }

    // Rules for top-level habits collection (for backward compatibility)
    match /habits/{habitId} {
      allow read, write: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
    }
  }
}